|top
HS <= VGA:inst.VGA_HS
rst => inst6.IN0
clk[0] => VGA:inst.CLOCK_24[0]
clk[1] => VGA:inst.CLOCK_24[1]
ps2c => ps2_keyboard:ps2_keyboard.ps2c
ps2d => ps2_keyboard:ps2_keyboard.ps2d
VS <= VGA:inst.VGA_VS
break <= ps2_keyboard:ps2_keyboard.break
data_ready <= ps2_keyboard:ps2_keyboard.data_ready
Blue[0] <= VGA:inst.VGA_B[0]
Blue[1] <= VGA:inst.VGA_B[1]
Blue[2] <= VGA:inst.VGA_B[2]
Blue[3] <= VGA:inst.VGA_B[3]
Green[0] <= VGA:inst.VGA_G[0]
Green[1] <= VGA:inst.VGA_G[1]
Green[2] <= VGA:inst.VGA_G[2]
Green[3] <= VGA:inst.VGA_G[3]
Red[0] <= VGA:inst.VGA_R[0]
Red[1] <= VGA:inst.VGA_R[1]
Red[2] <= VGA:inst.VGA_R[2]
Red[3] <= VGA:inst.VGA_R[3]
udlr[0] => ~NO_FANOUT~
udlr[1] => ~NO_FANOUT~
udlr[2] => ~NO_FANOUT~
udlr[3] => ~NO_FANOUT~


|top|VGA:inst
CLOCK_24[0] => PLL:C2.clk_in_clk
CLOCK_24[1] => ~NO_FANOUT~
VGA_HS <= SYNC:C1.HSYNC
VGA_VS <= SYNC:C1.VSYNC
VGA_R[0] <= SYNC:C1.R[0]
VGA_R[1] <= SYNC:C1.R[1]
VGA_R[2] <= SYNC:C1.R[2]
VGA_R[3] <= SYNC:C1.R[3]
VGA_G[0] <= SYNC:C1.G[0]
VGA_G[1] <= SYNC:C1.G[1]
VGA_G[2] <= SYNC:C1.G[2]
VGA_G[3] <= SYNC:C1.G[3]
VGA_B[0] <= SYNC:C1.B[0]
VGA_B[1] <= SYNC:C1.B[1]
VGA_B[2] <= SYNC:C1.B[2]
VGA_B[3] <= SYNC:C1.B[3]
KEY[0] => SYNC:C1.KEYS[0]
KEY[1] => SYNC:C1.KEYS[1]
KEY[2] => SYNC:C1.KEYS[2]
KEY[3] => SYNC:C1.KEYS[3]
RST => SYNC:C1.RST


|top|VGA:inst|SYNC:C1
CLK => VSYNC~reg0.CLK
CLK => HSYNC~reg0.CLK
CLK => SQ_Y5[0].CLK
CLK => SQ_Y5[1].CLK
CLK => SQ_Y5[2].CLK
CLK => SQ_Y5[3].CLK
CLK => SQ_Y5[4].CLK
CLK => SQ_Y5[5].CLK
CLK => SQ_Y5[6].CLK
CLK => SQ_Y5[7].CLK
CLK => SQ_Y5[8].CLK
CLK => SQ_Y5[9].CLK
CLK => SQ_Y5[10].CLK
CLK => SQ_X5[0].CLK
CLK => SQ_X5[1].CLK
CLK => SQ_X5[2].CLK
CLK => SQ_X5[3].CLK
CLK => SQ_X5[4].CLK
CLK => SQ_X5[5].CLK
CLK => SQ_X5[6].CLK
CLK => SQ_X5[7].CLK
CLK => SQ_X5[8].CLK
CLK => SQ_X5[9].CLK
CLK => SQ_X5[10].CLK
CLK => SQ_X7[0].CLK
CLK => SQ_X7[1].CLK
CLK => SQ_X7[2].CLK
CLK => SQ_X7[3].CLK
CLK => SQ_X7[4].CLK
CLK => SQ_X7[5].CLK
CLK => SQ_X7[6].CLK
CLK => SQ_X7[7].CLK
CLK => SQ_X7[8].CLK
CLK => SQ_X7[9].CLK
CLK => SQ_X7[10].CLK
CLK => SQ_X6[0].CLK
CLK => SQ_X6[1].CLK
CLK => SQ_X6[2].CLK
CLK => SQ_X6[3].CLK
CLK => SQ_X6[4].CLK
CLK => SQ_X6[5].CLK
CLK => SQ_X6[6].CLK
CLK => SQ_X6[7].CLK
CLK => SQ_X6[8].CLK
CLK => SQ_X6[9].CLK
CLK => SQ_X6[10].CLK
CLK => SQ_X4[2].CLK
CLK => SQ_X4[3].CLK
CLK => SQ_X4[4].CLK
CLK => SQ_X4[5].CLK
CLK => SQ_X4[6].CLK
CLK => SQ_X4[7].CLK
CLK => SQ_X4[8].CLK
CLK => SQ_X4[9].CLK
CLK => SQ_X4[10].CLK
CLK => SQ_X3[0].CLK
CLK => SQ_X3[1].CLK
CLK => SQ_X3[2].CLK
CLK => SQ_X3[3].CLK
CLK => SQ_X3[4].CLK
CLK => SQ_X3[5].CLK
CLK => SQ_X3[6].CLK
CLK => SQ_X3[7].CLK
CLK => SQ_X3[8].CLK
CLK => SQ_X3[9].CLK
CLK => SQ_X3[10].CLK
CLK => SQ_X2[3].CLK
CLK => SQ_X2[4].CLK
CLK => SQ_X2[5].CLK
CLK => SQ_X2[6].CLK
CLK => SQ_X2[7].CLK
CLK => SQ_X2[8].CLK
CLK => SQ_X2[9].CLK
CLK => SQ_X2[10].CLK
CLK => SQ_X1[1].CLK
CLK => SQ_X1[2].CLK
CLK => SQ_X1[3].CLK
CLK => SQ_X1[4].CLK
CLK => SQ_X1[5].CLK
CLK => SQ_X1[6].CLK
CLK => SQ_X1[7].CLK
CLK => SQ_X1[8].CLK
CLK => SQ_X1[9].CLK
CLK => SQ_X1[10].CLK
CLK => VPOS[0].CLK
CLK => VPOS[1].CLK
CLK => VPOS[2].CLK
CLK => VPOS[3].CLK
CLK => VPOS[4].CLK
CLK => VPOS[5].CLK
CLK => VPOS[6].CLK
CLK => VPOS[7].CLK
CLK => VPOS[8].CLK
CLK => VPOS[9].CLK
CLK => VPOS[10].CLK
CLK => HPOS[0].CLK
CLK => HPOS[1].CLK
CLK => HPOS[2].CLK
CLK => HPOS[3].CLK
CLK => HPOS[4].CLK
CLK => HPOS[5].CLK
CLK => HPOS[6].CLK
CLK => HPOS[7].CLK
CLK => HPOS[8].CLK
CLK => HPOS[9].CLK
CLK => HPOS[10].CLK
CLK => B[0]~reg0.CLK
CLK => B[1]~reg0.CLK
CLK => B[2]~reg0.CLK
CLK => B[3]~reg0.CLK
CLK => G[0]~reg0.CLK
CLK => G[1]~reg0.CLK
CLK => G[2]~reg0.CLK
CLK => G[3]~reg0.CLK
CLK => R[0]~reg0.CLK
CLK => R[1]~reg0.CLK
CLK => R[2]~reg0.CLK
CLK => R[3]~reg0.CLK
HSYNC <= HSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
VSYNC <= VSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[0] <= R[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[0] <= G[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[1] <= G[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[2] <= G[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[3] <= G[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[0] <= B[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[1] <= B[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[2] <= B[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[3] <= B[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => SQ_X5.OUTPUTSELECT
KEYS[0] => Equal0.IN3
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => SQ_X5.OUTPUTSELECT
KEYS[1] => Equal0.IN2
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => SQ_Y5.OUTPUTSELECT
KEYS[2] => Equal0.IN1
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => SQ_Y5.OUTPUTSELECT
KEYS[3] => Equal0.IN0
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X1.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X2.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X3.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X4.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X6.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT
RST => SQ_X7.OUTPUTSELECT


|top|VGA:inst|PLL:C2
clk_in_clk => PLL_altpll_0:altpll_0.clk
rst_reset => PLL_altpll_0:altpll_0.reset
clk_out_clk <= PLL_altpll_0:altpll_0.c0


|top|VGA:inst|PLL:C2|PLL_altpll_0:altpll_0
address[0] => w_select_control.IN0
address[0] => w_select_status.IN0
address[1] => w_select_status.IN1
address[1] => w_select_control.IN1
areset => comb.IN1
c0 <= altpll:sd1.clk
clk => clk.IN2
locked <= wire_sd1_locked.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
read => readdata.IN1
read => readdata.IN1
readdata[0] <= readdata.DB_MAX_OUTPUT_PORT_TYPE
readdata[1] <= readdata.DB_MAX_OUTPUT_PORT_TYPE
readdata[2] <= <GND>
readdata[3] <= <GND>
readdata[4] <= <GND>
readdata[5] <= <GND>
readdata[6] <= <GND>
readdata[7] <= <GND>
readdata[8] <= <GND>
readdata[9] <= <GND>
readdata[10] <= <GND>
readdata[11] <= <GND>
readdata[12] <= <GND>
readdata[13] <= <GND>
readdata[14] <= <GND>
readdata[15] <= <GND>
readdata[16] <= <GND>
readdata[17] <= <GND>
readdata[18] <= <GND>
readdata[19] <= <GND>
readdata[20] <= <GND>
readdata[21] <= <GND>
readdata[22] <= <GND>
readdata[23] <= <GND>
readdata[24] <= <GND>
readdata[25] <= <GND>
readdata[26] <= <GND>
readdata[27] <= <GND>
readdata[28] <= <GND>
readdata[29] <= <GND>
readdata[30] <= <GND>
readdata[31] <= <GND>
reset => prev_reset.ACLR
reset => pfdena_reg.PRESET
reset => _.IN1
write => wire_pfdena_reg_ena.IN1
writedata[0] => w_reset.IN1
writedata[1] => pfdena_reg.DATAIN
writedata[2] => ~NO_FANOUT~
writedata[3] => ~NO_FANOUT~
writedata[4] => ~NO_FANOUT~
writedata[5] => ~NO_FANOUT~
writedata[6] => ~NO_FANOUT~
writedata[7] => ~NO_FANOUT~
writedata[8] => ~NO_FANOUT~
writedata[9] => ~NO_FANOUT~
writedata[10] => ~NO_FANOUT~
writedata[11] => ~NO_FANOUT~
writedata[12] => ~NO_FANOUT~
writedata[13] => ~NO_FANOUT~
writedata[14] => ~NO_FANOUT~
writedata[15] => ~NO_FANOUT~
writedata[16] => ~NO_FANOUT~
writedata[17] => ~NO_FANOUT~
writedata[18] => ~NO_FANOUT~
writedata[19] => ~NO_FANOUT~
writedata[20] => ~NO_FANOUT~
writedata[21] => ~NO_FANOUT~
writedata[22] => ~NO_FANOUT~
writedata[23] => ~NO_FANOUT~
writedata[24] => ~NO_FANOUT~
writedata[25] => ~NO_FANOUT~
writedata[26] => ~NO_FANOUT~
writedata[27] => ~NO_FANOUT~
writedata[28] => ~NO_FANOUT~
writedata[29] => ~NO_FANOUT~
writedata[30] => ~NO_FANOUT~
writedata[31] => ~NO_FANOUT~


|top|VGA:inst|PLL:C2|PLL_altpll_0:altpll_0|PLL_altpll_0_stdsync_sv6:stdsync2
clk => clk.IN1
din => din.IN1
dout <= PLL_altpll_0_dffpipe_l2c:dffpipe3.q
reset_n => reset_n.IN1


|top|VGA:inst|PLL:C2|PLL_altpll_0:altpll_0|PLL_altpll_0_stdsync_sv6:stdsync2|PLL_altpll_0_dffpipe_l2c:dffpipe3
clock => dffe6a[0].CLK
clock => dffe5a[0].CLK
clock => dffe4a[0].CLK
clrn => dffe6a[0].ACLR
clrn => dffe4a[0].ACLR
clrn => dffe5a[0].ACLR
d[0] => dffe4a[0].DATAIN
q[0] <= dffe6a[0].DB_MAX_OUTPUT_PORT_TYPE


|top|VGA:inst|PLL:C2|PLL_altpll_0:altpll_0|altpll:sd1
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll.ARESET
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll.LOCKED
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|ps2_decode:inst2
code_in[0] => Mux0.IN263
code_in[0] => Mux1.IN263
code_in[0] => Mux2.IN263
code_in[0] => Mux3.IN263
code_in[1] => Mux0.IN262
code_in[1] => Mux1.IN262
code_in[1] => Mux2.IN262
code_in[1] => Mux3.IN262
code_in[2] => Mux0.IN261
code_in[2] => Mux1.IN261
code_in[2] => Mux2.IN261
code_in[2] => Mux3.IN261
code_in[3] => Mux0.IN260
code_in[3] => Mux1.IN260
code_in[3] => Mux2.IN260
code_in[3] => Mux3.IN260
code_in[4] => Mux0.IN259
code_in[4] => Mux1.IN259
code_in[4] => Mux2.IN259
code_in[4] => Mux3.IN259
code_in[5] => Mux0.IN258
code_in[5] => Mux1.IN258
code_in[5] => Mux2.IN258
code_in[5] => Mux3.IN258
code_in[6] => Mux0.IN257
code_in[6] => Mux1.IN257
code_in[6] => Mux2.IN257
code_in[6] => Mux3.IN257
code_in[7] => Mux0.IN256
code_in[7] => Mux1.IN256
code_in[7] => Mux2.IN256
code_in[7] => Mux3.IN256
udlr[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
udlr[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
udlr[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
udlr[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top|ps2_keyboard:ps2_keyboard
rst => data_ready~reg0.ACLR
rst => break~reg0.ACLR
rst => key_code[0]~reg0.ACLR
rst => key_code[1]~reg0.ACLR
rst => key_code[2]~reg0.ACLR
rst => key_code[3]~reg0.ACLR
rst => key_code[4]~reg0.ACLR
rst => key_code[5]~reg0.ACLR
rst => key_code[6]~reg0.ACLR
rst => key_code[7]~reg0.ACLR
rst => \shift:data_reg3[2].ACLR
rst => \shift:data_reg3[3].ACLR
rst => \shift:data_reg3[4].ACLR
rst => \shift:data_reg3[5].ACLR
rst => \shift:data_reg3[6].ACLR
rst => \shift:data_reg3[7].ACLR
rst => \shift:data_reg3[8].ACLR
rst => \shift:data_reg3[9].ACLR
rst => \shift:data_reg3[10].ACLR
rst => \shift:data_reg2[0].ACLR
rst => \shift:data_reg2[1].ACLR
rst => \shift:data_reg2[2].ACLR
rst => \shift:data_reg2[3].ACLR
rst => \shift:data_reg2[4].ACLR
rst => \shift:data_reg2[5].ACLR
rst => \shift:data_reg2[6].ACLR
rst => \shift:data_reg2[7].ACLR
rst => \shift:data_reg2[8].ACLR
rst => \shift:data_reg2[9].ACLR
rst => \shift:data_reg2[10].ACLR
rst => \shift:data_reg1[0].ACLR
rst => \shift:data_reg1[1].ACLR
rst => \shift:data_reg1[2].ACLR
rst => \shift:data_reg1[3].ACLR
rst => \shift:data_reg1[4].ACLR
rst => \shift:data_reg1[5].ACLR
rst => \shift:data_reg1[6].ACLR
rst => \shift:data_reg1[7].ACLR
rst => \shift:data_reg1[8].ACLR
rst => \shift:data_reg1[9].ACLR
rst => \shift:data_reg1[10].ACLR
rst => \shift:clk_count[0].ACLR
rst => \shift:clk_count[1].ACLR
rst => \shift:clk_count[2].ACLR
rst => \shift:clk_count[3].ACLR
rst => \shift:clk_count[4].ACLR
rst => \shift:clk_count[5].ACLR
rst => \shift:clk_count[6].ACLR
rst => \shift:clk_count[7].ACLR
rst => \shift:clk_count[8].ACLR
rst => \shift:clk_count[9].ACLR
rst => \shift:clk_count[10].ACLR
rst => \shift:clk_count[11].ACLR
rst => \shift:clk_count[12].ACLR
rst => \shift:clk_count[13].ACLR
rst => \shift:clk_count[14].ACLR
rst => \shift:clk_count[15].ACLR
rst => \shift:clk_count[16].ACLR
rst => \shift:clk_count[17].ACLR
rst => \shift:clk_count[18].ACLR
rst => \shift:clk_count[19].ACLR
rst => \shift:clk_count[20].ACLR
rst => \shift:clk_count[21].ACLR
rst => \shift:clk_count[22].ACLR
rst => \shift:clk_count[23].ACLR
rst => \shift:clk_count[24].ACLR
rst => \shift:clk_count[25].ACLR
rst => \shift:clk_count[26].ACLR
rst => \shift:clk_count[27].ACLR
rst => \shift:clk_count[28].ACLR
rst => \shift:clk_count[29].ACLR
rst => \shift:clk_count[30].ACLR
ps2c => data_ready~reg0.CLK
ps2c => break~reg0.CLK
ps2c => key_code[0]~reg0.CLK
ps2c => key_code[1]~reg0.CLK
ps2c => key_code[2]~reg0.CLK
ps2c => key_code[3]~reg0.CLK
ps2c => key_code[4]~reg0.CLK
ps2c => key_code[5]~reg0.CLK
ps2c => key_code[6]~reg0.CLK
ps2c => key_code[7]~reg0.CLK
ps2c => \shift:data_reg3[2].CLK
ps2c => \shift:data_reg3[3].CLK
ps2c => \shift:data_reg3[4].CLK
ps2c => \shift:data_reg3[5].CLK
ps2c => \shift:data_reg3[6].CLK
ps2c => \shift:data_reg3[7].CLK
ps2c => \shift:data_reg3[8].CLK
ps2c => \shift:data_reg3[9].CLK
ps2c => \shift:data_reg3[10].CLK
ps2c => \shift:data_reg2[0].CLK
ps2c => \shift:data_reg2[1].CLK
ps2c => \shift:data_reg2[2].CLK
ps2c => \shift:data_reg2[3].CLK
ps2c => \shift:data_reg2[4].CLK
ps2c => \shift:data_reg2[5].CLK
ps2c => \shift:data_reg2[6].CLK
ps2c => \shift:data_reg2[7].CLK
ps2c => \shift:data_reg2[8].CLK
ps2c => \shift:data_reg2[9].CLK
ps2c => \shift:data_reg2[10].CLK
ps2c => \shift:data_reg1[0].CLK
ps2c => \shift:data_reg1[1].CLK
ps2c => \shift:data_reg1[2].CLK
ps2c => \shift:data_reg1[3].CLK
ps2c => \shift:data_reg1[4].CLK
ps2c => \shift:data_reg1[5].CLK
ps2c => \shift:data_reg1[6].CLK
ps2c => \shift:data_reg1[7].CLK
ps2c => \shift:data_reg1[8].CLK
ps2c => \shift:data_reg1[9].CLK
ps2c => \shift:data_reg1[10].CLK
ps2c => \shift:clk_count[0].CLK
ps2c => \shift:clk_count[1].CLK
ps2c => \shift:clk_count[2].CLK
ps2c => \shift:clk_count[3].CLK
ps2c => \shift:clk_count[4].CLK
ps2c => \shift:clk_count[5].CLK
ps2c => \shift:clk_count[6].CLK
ps2c => \shift:clk_count[7].CLK
ps2c => \shift:clk_count[8].CLK
ps2c => \shift:clk_count[9].CLK
ps2c => \shift:clk_count[10].CLK
ps2c => \shift:clk_count[11].CLK
ps2c => \shift:clk_count[12].CLK
ps2c => \shift:clk_count[13].CLK
ps2c => \shift:clk_count[14].CLK
ps2c => \shift:clk_count[15].CLK
ps2c => \shift:clk_count[16].CLK
ps2c => \shift:clk_count[17].CLK
ps2c => \shift:clk_count[18].CLK
ps2c => \shift:clk_count[19].CLK
ps2c => \shift:clk_count[20].CLK
ps2c => \shift:clk_count[21].CLK
ps2c => \shift:clk_count[22].CLK
ps2c => \shift:clk_count[23].CLK
ps2c => \shift:clk_count[24].CLK
ps2c => \shift:clk_count[25].CLK
ps2c => \shift:clk_count[26].CLK
ps2c => \shift:clk_count[27].CLK
ps2c => \shift:clk_count[28].CLK
ps2c => \shift:clk_count[29].CLK
ps2c => \shift:clk_count[30].CLK
ps2d => \shift:data_reg1[10].DATAIN
key_code[0] <= key_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[1] <= key_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[2] <= key_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[3] <= key_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[4] <= key_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[5] <= key_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[6] <= key_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_code[7] <= key_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
break <= break~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready <= data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


